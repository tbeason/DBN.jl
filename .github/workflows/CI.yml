name: CI
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.12'  # Minimum supported version
          - '1'     # Latest stable
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4

      # Install Rust for compatibility tests with official dbn-cli
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      # Cache Rust dependencies (Unix)
      - name: Cache Rust dependencies (Unix)
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            /workspace/dbn/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Cache Rust dependencies (Windows)
      - name: Cache Rust dependencies (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            C:\workspace\dbn\target\
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Clone and build official dbn-cli for compatibility tests
      - name: Build dbn-cli (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir -p /workspace
          if [ ! -d "/workspace/dbn" ]; then
            git clone --depth 1 https://github.com/databento/dbn /workspace/dbn
          fi
          cd /workspace/dbn/rust/dbn-cli
          cargo build --release

      - name: Build dbn-cli (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "C:\workspace" | Out-Null
          if (-not (Test-Path "C:\workspace\dbn")) {
            git clone --depth 1 https://github.com/databento/dbn "C:\workspace\dbn"
          }
          cd "C:\workspace\dbn\rust\dbn-cli"
          cargo build --release

      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - uses: julia-actions/cache@v2

      - uses: julia-actions/julia-buildpkg@v1

      - uses: julia-actions/julia-runtest@v1

      - uses: julia-actions/julia-processcoverage@v1

      - uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
